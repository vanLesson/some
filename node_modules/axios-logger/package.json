{
    "name": "axios-logger",
    "version": "2.3.1",
    "description": "Beautify Axios Logging Messages",
    "main": "lib/index.js",
    "keywords": [
        "javascript",
        "nodejs",
        "network",
        "axios",
        "http",
        "log",
        "logger",
        "beautify",
        "library",
        "server"
    ],
    "repo,sitory": {
        "type": "git",
        "url": "git+https://github.com/hg-pyun/axios-intercept-logger.git"
    },
    "author": "Haegul Pyun",
    "email": "phg2491@gmail.com",
    "license": "MIT",
    "bugs": {
        "url": "https://github.com/hg-pyun/axios-intercept-logger/issues"
    },
    "homepage": "https://github.com/hg-pyun/axios-intercept-logger#readme",
    "devDependencies": {
        "@babel/cli": "^7.7.7",
        "@babel/core": "^7.7.7",
        "@babel/plugin-proposal-class-properties": "^7.7.4",
        "@babel/plugin-proposal-object-rest-spread": "^7.7.7",
        "@babel/preset-env": "^7.7.7",
        "@babel/preset-typescript": "^7.7.7",
        "@types/jest": "^24.0.25",
        "@types/node": "^12.12.22",
        "axios": "^0.18.0",
        "body-parser": "^1.19.0",
        "compression": "^1.7.4",
        "cookie-parser": "^1.4.4",
        "cross-env": "^5.2.1",
        "express": "^4.17.1",
        "husky": "^2.7.0",
        "jest": "^24.9.0",
        "lint-staged": "^8.2.1",
        "prettier": "^1.19.1",
        "typescript": "^3.7.4"
    },
    "dependencies": {
        "@types/dateformat": "^3.0.1",
        "chalk": "^2.4.1",
        "dateformat": "^3.0.3"
    },
    "husky": {
        "hooks": {
            "pre-commit": "lint-staged"
        }
    },
    "lint-staged": {
        "*.{js,css,json,md}": [
            "prettier --write",
            "git add"
        ]
    },
    "scripts": {
        "type-check": "tsc --noEmit",
        "type-check:watch": "npm run type-check -- --watch",
        "build": "rm -rf ./lib && npm run build:types && npm run build:js",
        "build:types": "tsc --emitDeclarationOnly",
        "build:js": "cross-env BABEL_ENV=production babel src --out-dir lib --extensions \".ts,.tsx\" --source-maps inline",
        "test": "jest --silent",
        "test:watch": "jest --watchAll",
        "test:server": "node ./test/server.js",
        "deploy": "npm test && npm run build && npm publish"
    }
}
