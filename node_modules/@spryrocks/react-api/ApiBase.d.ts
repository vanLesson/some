import ApiConfiguration from './ApiConfiguration';
import ApiDelegate, { AuthInfo } from './ApiDelegate';
import IApiTokenHolder from './IApiTokenHolder';
export default abstract class ApiBase {
    protected readonly configuration: ApiConfiguration;
    protected readonly delegate: ApiDelegate;
    protected readonly tokenHolder: IApiTokenHolder;
    private readonly refreshQueue;
    protected readonly baseUrl: string;
    constructor(configuration: ApiConfiguration, delegate: ApiDelegate, tokenHolder: IApiTokenHolder);
    protected wrapApiCall<TResponse>(call: () => Promise<TResponse>): Promise<TResponse>;
    private static checkNotAuthorizedError;
    private refreshTokens;
    protected abstract refreshToken(refreshToken: string): Promise<AuthInfo>;
}
