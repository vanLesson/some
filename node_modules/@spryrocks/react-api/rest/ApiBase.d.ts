import { AxiosPromise, AxiosRequestConfig } from 'axios';
import ApiConfiguration from './ApiConfiguration';
import ApiDelegate from '../ApiDelegate';
export default class ApiBase {
    private delegate;
    private static readonly HEADERS;
    private readonly api;
    url: string | undefined;
    protected static wrapApiCall(call: AxiosPromise): Promise<any>;
    constructor(baseUrl: string, configuration: ApiConfiguration, delegate: ApiDelegate);
    postFile(uri: string): Promise<void>;
    private static createFormWithFile;
    private static createFormWithFileWeb;
    private static createFormWithFileRN;
    protected request<T>(config: AxiosRequestConfig): Promise<T>;
    protected get<T>(url: string, config?: AxiosRequestConfig): Promise<T>;
    protected delete(url: string, config?: AxiosRequestConfig): Promise<void>;
    protected head(url: string, config?: AxiosRequestConfig): Promise<void>;
    protected post<T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T>;
    protected put<T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T>;
    protected patch<T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T>;
    private static handleError;
    private static handleResponse;
}
